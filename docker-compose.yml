version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    image: abhu1234/crud-app-backend:latest
    ports:
      - "5000:5000"
    environment:
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=postgres
      - NODE_ENV=production  # Use production for pre-built images
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    image: abhu1234/crud-app-frontend:latest
    ports:
      - "3000:80"  # Frontend accessible on port 3000
    environment:
      - API_URL=http://backend:5000  # Internal Docker network communication
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
